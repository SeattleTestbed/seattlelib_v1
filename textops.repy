"""
<Program Name>
  textops.repy

<Started>
  July 24, 2009

<Author>
  Conrad Meyer <cemeyer@u.washington.edu>

<Purpose>
  Provides text-processing utility functions loosely modelled after GNU
  coreutils.

  Currently supports a subset of the functionality of grep and wc.
"""




def textops_rawtexttolines(text, linedelimiter="\n"):
  """
  <Purpose>
    Converts raw text (a string) into lines that can be processed by the
    functions in this module.

  <Arguments>
    text:
            The text to convert into lines (basically, a sequence of strings).

    linedelimiter (optional, defaults to "\n"):
            The string denoting an EOL ("\n" on Unix, "\r\n" on Windows).

  <Exceptions>
    TypeError on bad parameters.

  <Side Effects>
    None.

  <Returns>
    A sequence of strings; each element is a line, with newlines removed.

  """

  lines = text.split(linedelimiter)
  if lines[len(lines)-1] == '':
    lines = lines[:-1]

  return lines




def textops_grep(match, lines, exclude=False):
  """
  <Purpose>
    Return a subset of lines matching (or not matching) a given string.

  <Arguments>
    match:
            The string to match.
    
    lines:
            The lines to filter.

    exclude (optional, defaults to false):
            If false, include lines matching 'match'. If true, include lines
            not matching 'match'.

  <Exceptions>
    TypeError on bad parameters.

  <Side Effects>
    None.

  <Returns>
    A subset of the original lines.

  """

  result = []
  for line in lines:
    if not exclude and line.find(match) >= 0:
      result.append(line)
    elif exclude and line.find(match) < 0:
      result.append(line)

  return result




def textops_linecount(lines):
  """
  <Purpose>
    Count the number of result lines (wc -l).

  <Arguments>
    lines:
            The lines to count.

  <Exceptions>
    TypeError on bad parameters.

  <Side Effects>
    None.

  <Returns>
    The number of lines.

  """

  return len(lines)
